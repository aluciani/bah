#include "<stdlib.h>"
#include "string.bah"

#windows {
    #define! _fullpath(buff cpstring, rel cpstring, l int) cpstring
}

//Used for getting the absolute path of a file/directory.
//An absolute path is a path that goes all the way to the root.
absPath(path cpstring) cpstring {
    #linux {
        p = realpath(path, null)
    }
    #darwin {
        p = realpath(path, null)
    }
    #windows {
        buff cpstring = memoryAlloc(4096)
        p = _fullpath(buff, path, 4095)
        if p != null {
            arr = strAsArr(p)
            i=0; for i < len(arr), i++ {
                c = arr[i]
                if c == <char>92 {
                    arr[i] = '/'
                }
            }
        }
    }
    return p
}

//To get the working path.
//The working path is the path to the directory that is defined as **./**.
getCurrentPath() cpstring {
    cwd cpstring = memoryAlloc(4096)
    getcwd(cwd, 4096)
    return cwd
}

//Returns true if the subPath is inside the basePath.
//Usefull for securing connection (such as HTTP server) to make sure you do not give
//access to your complete file system.
isInside(basePath cpstring, subPath cpstring) bool {
    abs1 = absPath(basePath)
    abs2 = absPath(subPath)
    return strHasPrefix(subPath, basePath) == true
}

#define! chdir(s cpstring)

//To change the current working directory.
setCurrentPath(s cpstring) {
    chdir(s)
}

//Example
// #include "iostream.bah"
// #include "path.bah"
// main() {
// currentPath = getCurrentPath()
// println(currentPath)
// filePath = absPath("./file.txt")
// println(filePath)
// }