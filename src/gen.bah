genArrRealloc(v variable*, preVal cpstring, val cpstring, elems Elems*) cpstring {

    vn = string(v.name)
    nstr = splitStringBefore(vn, "->data[")

    vn.trimLeft(strlen(nstr) + 7)
    vn.trimRight(1)
    nLengthStr = vn.str()

    nLength = genCompilerVar()

    return "
    unsigned int "+nLength+" = "+nLengthStr+";
    __Bah_realocate_arr("+nstr+", "+nLength+");
    "+preVal+nstr+"->data["+nLength+"] = "+val
}

genConcat(strs []cpstring, elems Elems*) cpstring {
    

    buff = genCompilerVar()
    r = "char** "+buff+" = alloca("+intToStr(len(strs))+" * sizeof(char*));"

    i=0; for i < len(strs), i++ {
        r += buff + "["+intToStr(len(strs) - i - 1)+"] = " + strs[i] + ";" 
    }

    if isGlobal() {
        INIT += rope(r)
    } else {
        OUTPUT += rope(r)
    }
    rstr = registerRCPvar("cpstring", "__Bah_multiple_concat("+buff+", "+intToStr(len(strs))+")", elems) //result var

    return rstr
}