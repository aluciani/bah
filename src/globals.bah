#include "iostream.bah"
#include "string.bah"

OUTPUT rope* //the C output
NEXT_LINE = "" //if we need to add something to the next C line

INIT rope* //the C init function for initializing outter scope stuff (global vars...)

//Bah variable
struct variable {
    name: cpstring = ""
    type: cpstring = ""
    isConst: bool = false
    constVal: cpstring = ""
    isArray: bool = false
    from: cpstring = ""
    outterScope: bool = false
}

//Bah struct member
struct structMemb extend variable {
    def: cpstring = ""
    isFn: bool = false
}

//Bah function
struct func {
    name: cpstring = ""
    args: []variable*
    returns: variable*
    returned: bool
    isBinding: bool = false
    from: cpstring = ""
    file: cpstring = ""
    line: int = 1
    used: bool = false
    code: rope* = null
}

//Interface between Bah struct and C struct
struct cStruct {
    name: cpstring = ""
    members: []structMemb*
    methods: []func*
    postCode: cpstring = ""
    print: bool
    extendedFrom: cpstring = ""
    isBinding: bool = false
    hasRCPmemb: bool = false
}

//Every elements of the program for a specific scope
struct Elems {
    vars: []variable*
    structs: []cStruct*
    types: []cpstring
    fns: []func*
}

//Additional info for the compiler no matter the scope
struct compilerStateTag {
    includes: []cpstring
    cIncludes: []cpstring
    cLibs: []cpstring
    currentFile: cpstring
    currentDir: cpstring = "./"
    isBranch: bool = false
    isFor: bool = false
    arrTypesDecl: []cpstring
    haveEntryPoint: bool = false
    RCPvars: []variable*
    evals: []cpstring
}

shouldOnlyDecl = false

compilerState compilerStateTag

currentCStruct cStruct*

threadCount = 0

currentFn func* = null

totalLines = 0

totalLexerTime = 0

RCPenabled = false

flags flags