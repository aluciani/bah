//User optimization, passing argumeny by reference
OPTI_checkFuncScopeRef(elems Elems*) {
    if strHasPrefix(compilerState.currentFile, BAH_DIR) == true {
        return
    }
    i=0; for i < len(elems.vars), i++ {
        v = elems.vars[i]
        if v.isArg == false {
            continue
        }
        if v.lastSet != elems {
            if isRCPpointerType(v.type) == false && v.type != "reflectElement" && string(v.name).hasPrefix("____BAH_COMPILER_VAR_") == false {
                s = searchStruct(v.type, elems)
                if s != null && currentFn != null {
                    throwNoticeLine("in \e[1;37m"+currentFn.name+"()\e[0m: argument \e[1;37m"+v.name+"\e[0m ("+v.type+") could be passed by reference.", currentFn.line)
                }
            }
        }
    }
}

//Is a token an expensive expretion to evaluate.
//Usefull for helped branch prediction.
isExprExpensive(t Tok*) bool {
    if t.isExpensive == true {
        return true
    }

    if t.type != TOKEN_TYPE_VAR && t.type != TOKEN_TYPE_INT && t.type != TOKEN_TYPE_FLOAT {
        return true
    }
    return false
}