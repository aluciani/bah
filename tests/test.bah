#include "iostream.bah"
#include "string.bah"
#include "time.bah"


test(name cpstring, fn function()bool) {
    s cpstring
    start = getTimeUnix()
    passed = fn()
    end = getTimeUnix()
    dur = end - start
    durStr = intToStr(dur / 1000)
    if passed == true {
        s = "\e[0;32m✔ " + name
    } else {
        s = "\e[0;31m❌ " + name
    }
    s = s + " (" + durStr + "µs)"
    println(s)
}

#include "./libs/markdown.bah"
#include "./libs/string.bah"
#include "./libs/http.bah"
#include "./libs/iostream.bah"
#include "./libs/json.bah"
#include "./libs/rope.bah"


testSer() bool {
    struct testSerStruct {
        a: int
        b: cpstring
    }
    t = new testSerStruct
    t.a = 32
    t.b = "this is a test"
    s = ser(t)
    nt testSerStruct* = unser(s)
    if nt.a != t.a || nt.b != t.b {
        return false
    }
    return true
}

main(args []cpstring) int {

    test("string", testString)

    test("markdown", testMarkdown)
    
    test("http", testHttp)
    
    test("iostream", testIostream)
    
    test("json", testJson)

    test("serialization", testSer)

    test("rope", testRope)

    return 0
}